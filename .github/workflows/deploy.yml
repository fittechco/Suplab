name: Changesets

on:
  push:
    branches:
      - main

concurrency:
  group: changeset-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  changelog:
    runs-on: ubuntu-latest
    if: github.repository_owner == 'shopify'
    name: Changelog PR or Release
    outputs:
      published: ${{ steps.changesets.outputs.published }}
      latest: ${{ env.latest }}
      latestBranch: ${{ env.latestBranch }}
    steps:
      - name: Flags
        id: flags
        run: |
          # IMPORTANT: Update this latestBranch whenever we move to a new major version:
          echo "latestBranch=2023-07" >> $GITHUB_ENV
          echo "latest=${{ github.ref_name == 'main' }}" >> $GITHUB_ENV

      - name: Checkout the code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: âŽ” Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
          cache-dependency-path: '**/yarn.lock'

      - name: Install the packages
        run: yarn install

      - name: Format release with Prettier
        run: yarn run format

      - name: Build the dist code
        run: yarn run build

      - name: Create Release Pull Request or Publish (for latest release)
        if: env.latest == 'true'
        id: changesets
        uses: changesets/action@v1
        with:
          version: yarn run version
          publish: yarn run changeset publish
          commit: '[ci] release ${{ env.latestBranch }}'
          title: '[ci] release ${{ env.latestBranch }}'
        env:
          GITHUB_TOKEN: ${{ secrets.SHOPIFY_GH_ACCESS_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  compile:
    needs: changelog
    if: needs.changelog.outputs.published == 'true' && needs.changelog.outputs.latest == 'true'
    runs-on: ubuntu-latest
    name: Compile the typescript templates and push them to main
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Install the packages
        run: yarn install --frozen-lockfile --ignore-engines

      - name: Build the dist code
        run: yarn run build

      - name: Compile skeleton
        run: |
          node scripts/
